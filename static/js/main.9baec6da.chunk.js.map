{"version":3,"sources":["../../src/store/log-context.ts","../../src/store/log-reducer.ts","../../src/hooks/useLog.ts","../../src/components/Log.tsx","../../src/utils/date.ts","../../src/index.tsx","../../src/hooks/useLogger.ts","App.tsx","index.tsx"],"names":["LogCotext","createContext","state","dispatch","action","initalState","useReducer","Log","React","useState","logs","useMemo","log","className","styles","showLogMenu","activeTab","onClick","setActiveTab","key","date","Intl","day","month","year","hour","minute","second","JSON","setShowLogMenu","LogRect","children","mode","value","useLog","useLogger","useContext","logger","name","type","payload","data","timestamp","Date","App","useEffect","interval","setInterval","random","Math","floor","age","address","city","clearInterval","href","ReactDOM","render","document","getElementById"],"mappings":"8MAEaA,EAAYC,wBAGtB,CACDC,MADC,GAEDC,SAAU,kBAAM,QCPlB,EAAe,SAACD,EAAD,GACb,OAAQE,EAAR,MACE,IAAK,UACH,MAAO,GAAP,mBAAO,GAAP,CAAkBA,EAAlB,UACF,IAAK,aACH,MAAO,GACT,QACE,OAAOF,ICJb,EAAe,eAACG,EAAD,0DACb,EAA0BC,qBAAW,EAArC,sBAAM,EAAN,KAAM,EAAN,KAEA,MAAO,CACLJ,QACAC,a,2SCHEI,EAAM,WACV,IAAQL,EAAUM,eAAlB,GAAQN,MACR,EAAsCO,oBAAtC,sBAAM,EAAN,KAAM,EAAN,KAEA,EAAkCA,mBAAlC,2BAAM,EAAN,KAAM,EAAN,KAEMC,EAAOC,mBAAQ,WACnB,OAAOT,UAAcU,YAAD,OAASA,SAA7B,OACC,CAACV,EAFJ,IAIA,OACE,yBAAKW,UAAWC,GACbC,GACC,yBAAKF,UAAS,UAAKC,IACjB,yBAAKD,UAAWC,GACd,4BACED,UAAS,UAAKC,EAAL,YACPE,WAAuBF,EAAoB,IAE7CG,QAAS,kBAAMC,EAAa,UALhC,QASE,4BACEL,UAAS,UAAKC,EAAL,YACPE,WAAuBF,EAAoB,IAE7CG,QAAS,kBAAMC,EAAa,UAbhC,WAiBE,4BACEL,UAAS,UAAKC,EAAL,YACPE,YAAwBF,EAAoB,IAE9CG,QAAS,kBAAMC,EAAa,WAtBlC,UA2BGR,OAAUE,YAAD,OACR,yBAAKO,IAAKP,8BAAiCC,UAAWC,GACpDN,4BC/CaY,EDgDCR,EADdJ,UC9CL,IAAIa,KAAJ,uBAAiC,CACtCC,IADsC,UAEtCC,MAFsC,QAGtCC,KAHsC,UAItCC,KAJsC,UAKtCC,OALsC,UAMtCC,OAAQ,YANH,OAAP,ID8CYnB,MACiCI,EAFnC,MAIEJ,6BAAMoB,eAAehB,EAAfgB,UAlChB,KChBuBR,UDuDrB,4BACEP,UAAS,UAAKC,EAAL,YACPC,EAAcD,EAAuB,IAEvCG,QAnDgB,kBAAMY,GAA5B,KAqDOd,EAAc,WA9CrB,QEJWe,EAAU,SAAC,GAAD,IAAC,EAAD,EAAC,KAAQC,EAAT,EAASA,SAC9B,cAAIC,EAEA,wBAAChC,EAAD,UAAoBiC,MAAOC,KACzB1B,0BADF,MADF,GAOKuB,GAGII,ECpBE,WACb,IAAQhC,EAAaiC,qBAArB,GAAQjC,SAcR,MAAO,CAAEkC,OAZT,SAAgB,GAAhB,IAAgB,EAAhB,EAAgB,OAAhB,EAAgB,KAAcC,EAA9B,EAA8BA,KAC5BnC,EAAS,CACPoC,KADO,UAEPC,QAAS,CACPF,OACAC,OACAE,OACAC,UAAW,IAAIC,WCqCRC,G,MA7CH,WACV,IAAQP,EAAWF,IAAXE,OAyBR,OAxBAQ,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAG3B,IAAMC,EAASC,KAAKC,MAAsB,EAAhBD,KAAKD,UAE/BX,EAAO,CACLE,KAAM,CAAC,OAAQ,OAAQ,SAASS,GAChCP,KAAM,CACJ,CACEH,KAAM,WACNa,IAAK,GACLC,QAAS,6BACTC,KAAM,UACNnD,MAAO,OAGXoC,KAAM,aAEP,KAEH,OAAO,kBAAMgB,cAAcR,OAI3B,yBAAKjC,UAAU,aACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,SAAd,YACA,wBAAIA,UAAU,aAAd,uFAKA,0FACA,uBAAG0C,KAAK,wCAAwC1C,UAAU,OAA1D,aAIF,4BAAQA,UAAU,aAAlB,gCCtCN2C,IAASC,OACP,kBAAC,EAAD,CAASzB,KAAK,OACZ,kBAAC,EAAD,OAGF0B,SAASC,eAAe,U","file":"static/js/main.9baec6da.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const LogCotext = createContext<{\r\n  state: Log[];\r\n  dispatch: React.Dispatch<any>;\r\n}>({\r\n  state: [],\r\n  dispatch: () => null,\r\n});\r\n","export default (state: Log[], action: any): Log[] => {\r\n  switch (action.type) {\r\n    case \"ADD_LOG\":\r\n      return [...state, action.payload];\r\n    case \"CLEAR_LOGS\":\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { useReducer } from \"react\";\r\nimport logReducer from \"../store/log-reducer\";\r\n\r\nexport default (initalState: Log[] = []) => {\r\n  const [state, dispatch] = useReducer(logReducer, initalState);\r\n\r\n  return {\r\n    state,\r\n    dispatch,\r\n  };\r\n};\r\n","import React, { useMemo, useState } from \"react\";\r\nimport { LogCotext } from \"../store/log-context\";\r\nimport styles from \"../styles.module.css\";\r\nimport { formatDate } from \"../utils/date\";\r\n\r\nconst Log = () => {\r\n  const { state } = React.useContext(LogCotext);\r\n  const [showLogMenu, setShowLogMenu] = useState(false);\r\n  const toggleLogMenu = () => setShowLogMenu(!showLogMenu);\r\n  const [activeTab, setActiveTab] = useState(\"INFO\");\r\n\r\n  const logs = useMemo(() => {\r\n    return state.filter((log) => log.type === activeTab);\r\n  }, [state, activeTab]);\r\n\r\n  return (\r\n    <div className={styles.log_rect_provider}>\r\n      {showLogMenu && (\r\n        <div className={`${styles.log_menu}`}>\r\n          <div className={styles.tab_wrapper}>\r\n            <button\r\n              className={`${styles.tab} ${\r\n                activeTab === \"INFO\" ? styles.tab_active : \"\"\r\n              }`}\r\n              onClick={() => setActiveTab(\"INFO\")}\r\n            >\r\n              Info\r\n            </button>\r\n            <button\r\n              className={`${styles.tab} ${\r\n                activeTab === \"WARN\" ? styles.tab_active : \"\"\r\n              }`}\r\n              onClick={() => setActiveTab(\"WARN\")}\r\n            >\r\n              Warning\r\n            </button>\r\n            <button\r\n              className={`${styles.tab} ${\r\n                activeTab === \"ERROR\" ? styles.tab_active : \"\"\r\n              }`}\r\n              onClick={() => setActiveTab(\"ERROR\")}\r\n            >\r\n              Error\r\n            </button>\r\n          </div>\r\n          {logs.map((log) => (\r\n            <div key={log.timestamp.getMilliseconds()} className={styles.log}>\r\n              <p>\r\n                {formatDate(log.timestamp)} - {log.name}\r\n              </p>\r\n              <pre>{JSON.stringify(log.data, null, 4)}</pre>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <button\r\n        className={`${styles.logger_btn} ${\r\n          showLogMenu ? styles.fullwidth_btn : \"\"\r\n        }`}\r\n        onClick={toggleLogMenu}\r\n      >\r\n        {showLogMenu ? \"Log Rect\" : \"LR\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Log;\r\n","export const formatDate = (date: Date) => {\r\n  return new Intl.DateTimeFormat(\"en-GB\", {\r\n    day: \"numeric\",\r\n    month: \"short\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n  }).format(date);\r\n};\r\n","import * as React from \"react\";\nimport useLoggerHook from \"./hooks/useLogger\";\nimport useLog from \"./hooks/useLog\";\nimport { LogCotext } from \"./store/log-context\";\nimport Log from \"./components/Log\";\n\ninterface Props {\n  mode: \"DEV\" | \"PROD\";\n  children: React.ReactElement;\n}\n\nexport const LogRect = ({ mode, children }: Props) => {\n  if (mode === \"DEV\") {\n    return (\n      <LogCotext.Provider value={useLog()}>\n        <Log />\n        {children}\n      </LogCotext.Provider>\n    );\n  }\n  return children;\n};\n\nexport const useLogger = useLoggerHook;\n","import { useContext } from \"react\";\r\nimport { LogCotext } from \"../store/log-context\";\r\n\r\nexport default () => {\r\n  const { dispatch } = useContext(LogCotext);\r\n\r\n  function logger({ type, data, name }: LogAddDTO) {\r\n    dispatch({\r\n      type: \"ADD_LOG\",\r\n      payload: {\r\n        name,\r\n        type,\r\n        data,\r\n        timestamp: new Date(),\r\n      },\r\n    });\r\n  }\r\n\r\n  return { logger };\r\n};\r\n","import React, { useEffect } from \"react\";\n\nimport { useLogger } from \"log-rect\";\nimport \"log-rect/dist/index.css\";\n\nconst App = () => {\n  const { logger } = useLogger();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // random number between 0 and 2\n\n      const random = Math.floor(Math.random() * 3);\n\n      logger({\n        type: [\"INFO\", \"WARN\", \"ERROR\"][random],\n        data: [\n          {\n            name: \"John Doe\",\n            age: 32,\n            address: \"1234 Main St, Anytown, USA\",\n            city: \"Anytown\",\n            state: \"CA\",\n          },\n        ],\n        name: \"gjshef\",\n      });\n    }, 5 * 1000);\n\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <h1 className=\"title\">Log Rect</h1>\n        <h2 className=\"sub-title\">\n          A react library to keep track of logs in your application the way it\n          was ment to be\n        </h2>\n\n        <p>Click the icon pointed by the arrow to see logs by Log Rect</p>\n        <a href=\"https://github.com/jamilur-r/log-rect\" className=\"btn\">\n          Git Repo\n        </a>\n      </div>\n      <button className=\"point-btn\">Click this button ---&gt;</button>\n    </div>\n  );\n};\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { LogRect } from \"log-rect\";\n\nReactDOM.render(\n  <LogRect mode=\"DEV\">\n    <App />\n  </LogRect>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}